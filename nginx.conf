worker_processes auto;

events {
    worker_connections 1000;
}

http {
    # Map for handling WebSocket upgrades
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    # Make sure all file types may be served. Otherwise, not everything will be diplayed properly.
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #---------------------------------------------------------
    # HTTP to HTTPS Redirect â€“ Both for main domains and API
    #---------------------------------------------------------
    server {
        listen 80;
        listen [::]:80;
	# Domain Names
        server_name astrocartics.xyz www.astrocartics.xyz eve.astrocartics.xyz api.astrocartics.xyz;
        return 302 https://$host$request_uri;
    }

    #---------------------------------------------------------
    # HTTPS Server Block for User Interface on main domains
    #---------------------------------------------------------
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
	# Domain Names
        server_name astrocartics.xyz www.astrocartics.xyz eve.astrocartics.xyz;
	# SSL Certificates
        ssl_certificate     /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    	# Set the document root to your static HTML directory
	root /usr/share/nginx/html/;
	index index.html;

	# Serve the main page at the root URL
    	# Existing location for serving files
    	location / {
    	    try_files $uri $uri/ =404;
    	}
    }

    #---------------------------------------------------------
    # HTTPS Server Block for API on api.astrocartics.xyz
    #---------------------------------------------------------
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name api.astrocartics.xyz;
	# SSL Certificates
        ssl_certificate     /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

	autoindex off;
	# Make sure you set to proper file path down below.
        location = /documentation {
                return 301 /documentation/;
        }
        # Serve API Documentation from a subdirectory
        location ^~ /documentation/ {
            # Ensure your documentation files are placed in this directory
            alias /usr/share/nginx/html/;
            index documentation.html;
            # Optionally disable proxy buffering or add caching headers if needed
        }
	# API and Websocket redirection to Go API framework.
	location / {
    		proxy_pass http://backend:PORT;
    		proxy_http_version 1.1;
    		proxy_set_header Upgrade $http_upgrade;
    		proxy_set_header Connection $connection_upgrade;
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    		proxy_set_header X-Forwarded-Proto $scheme;
	}
    }
}
